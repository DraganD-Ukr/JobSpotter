server.port=8081

# Default PostgreSQL connection string if DB_URL is not set via environment variable
spring.datasource.url=${DB_URL:jdbc:postgresql://postgres:5432/job-post}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:root}

#--------------------------Redis---------------------------------
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000ms


spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect



#----------------------------------------------Kafka----------------------------------------------------------------------
# Kafka Configuration (Docker)
spring.kafka.producer.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}

# Serializer for Key (assuming key is a String, but it could also be some other type)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

# Serializer for Value (Notification object)
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Other Kafka Producer properties
spring.kafka.producer.properties.retries=2
spring.kafka.producer.properties.acks=all
auto.create.topics.enable=true



#----------------------------------------------------------------------------------------------------

springdoc.api-docs.enabled=true 
springdoc.api-docs.path=/api/v1/job-posts/v3/api-docs

springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/api/v1/job-posts/swagger-ui.html

spring.jpa.properties.hibernate.search.backend.analysis.configurer=org.jobspotter.jobpost.config.LuceneAnalysisConfigurer
org.hibernate.search.backend.lucene.analysis=org.jobspotter.jobpost.config.LuceneAnalysisConfigurer



