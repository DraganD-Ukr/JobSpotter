name: Service CI Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
    paths:
      - 'jobspotter_backend/services/**'

  pull_request:
    branches:
      - main  # Trigger on PR targeting the main branch
    paths:
      - 'jobspotter_backend/services/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [config-server, discovery, gateway, job-post, notification, report, review, user]  # List all services folder names
        include:
          - service: config-server
            path: 'jobspotter_backend/services/config-server/**'
          - service: discovery
            path: 'jobspotter_backend/services/discovery/**'
          - service: gateway
            path: 'jobspotter_backend/services/gateway/**'
          - service: job-post
            path: 'jobspotter_backend/services/job-post/**'
          - service: notification
            path: 'jobspotter_backend/services/notification/**'
          - service: report
            path: 'jobspotter_backend/services/report/**'
          - service: review
            path: 'jobspotter_backend/services/review/**'
          - service: user
            path: 'jobspotter_backend/services/user/**'     
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if the service's directory changed in the commit or pr
      # Check if the service's directory changed in the commit
      - name: Check if the service directory changed
        id: check_changes
        run: |
          echo "Checking if ${{ matrix.path }} changed..."
          git fetch --deepen=2 origin ${{ github.sha }} ${{ github.event.before }} || git fetch --all origin

          if ${{ github.event_name == 'pull_request' }}; then
            # Compare against the base of the pull request
            BASE_SHA=${{ github.event.pull_request.base.sha }}
            CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }})
          else
            # Compare against the previous commit in the push event
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          fi

          # Check if any changed file is within the service's path
          if [[ $(echo "$CHANGED_FILES" | grep -E "^${{ matrix.path }}/") ]]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
          fi

        
      # Set up Amazon Corretto (JDK 21)
      - name: Set up Java (Amazon Corretto 21)
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      # Set environment variables from GitHub Secrets
      - name: Set environment variables
        run: |
          echo "GOOGLE_GEOCODING_API_KEY=${{ secrets.GOOGLE_GEOCODING_API_KEY }}" >> $GITHUB_ENV
          echo "AWS_S3_ACCESS_KEY_ID=${{ secrets.AWS_S3_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> $GITHUB_ENV
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Run tests for ${{ matrix.service }}
      - name: Run tests for ${{ matrix.service }}
        if: steps.check_changes.outputs.result == 'true'
        run: |
          cd jobspotter_backend/services/${{ matrix.service }}
          chmod +x ./mvnw
          ./mvnw clean verify -Dtest=!org.jobspotter.${{ matrix.service }}.* -Dsurefire.failIfNoSpecifiedTests=false

      # Build Docker Image
      - name: Build Docker Image for ${{ matrix.service }}
        if: steps.check_changes.outputs.result == 'true'
        run: |
          cd jobspotter_backend/services/${{ matrix.service }}
          docker build -t jobspotter/${{ matrix.service }}:${{ github.sha }} .

      - name: Log in to Docker Hub
        if: steps.check_changes.outputs.result == 'true'
        run: echo "${{ secrets.DOCKERHUB_PAC }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Push Docker Image
      - name: Push Docker Image for ${{ matrix.service }} to Docker Hub
        if: steps.check_changes.outputs.result == 'true'
        run: |
          docker push jobspotter/${{ matrix.service }}:${{ github.sha }}
