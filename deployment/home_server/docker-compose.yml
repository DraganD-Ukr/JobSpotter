services:

  #----------------------PostgreSQL------------------------
  postgresql:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "1234:5432"
    networks:
      - jobspotterserver_jobSpotter-net
    restart: unless-stopped

  #----------------------MongoDB------------------------
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    networks:
      - jobspotterserver_jobSpotter-net  # Include MongoDB in the network

  #----------------------Kafka and zookeper------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
    ports:
      - "22181:2181"
    networks:
      - jobspotterserver_jobSpotter-net



  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - jobspotterserver_jobSpotter-net


  #----------------------Keycloak------------------------
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak_db:/var/lib/postgresql/data
    networks:
      - jobspotterserver_jobSpotter-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_HOSTNAME: keycloak
      KC_HTTP_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_LOG_LEVEL: info
    command: start-dev --import-realm
    ports:
      - "9090:8080"
    depends_on:
      - keycloak-db
    volumes:
      - keycloak:/opt/keycloak/data
      - ./keycloak/realm-import.json:/opt/keycloak/data/import/realm-import.json:ro
    networks:
      - jobspotterserver_jobSpotter-net



  #        ----------------------Redis-------------------------

  redis:
    image: redis/redis-stack:latest  #  Use Redis Stack (Includes RediSearch)
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"  # RedisInsight UI
    volumes:
      - redis:/data
    networks:
      - jobspotterserver_jobSpotter-net

  #        --------------------------------------------Tools (Monitoring, Tracing)---------------------------------------------

  #----------------------Zipkin------------------------
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - jobspotterserver_jobSpotter-net


  #----------------------Prometheus------------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_1
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - jobspotterserver_jobSpotter-net
    restart: unless-stopped


  #----------------------Grafana------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prometheus
    links:
      - prometheus:prometheus # Link to Prometheus
    networks:
      - jobspotterserver_jobSpotter-net
    restart: unless-stopped
    volumes:
      - ./grafana:/var/lib/grafana  # Persist Grafana data






  #      ---------------------------------------JOBSPOTTER SERVICES------------------------------------------------

  #----------------------Config Server------------------------
  config-server:
    container_name: config-server
    image: jobspotter/config-server:latest
    ports:
      - "8888:8888"
    networks:
      - jobspotterserver_jobSpotter-net

  #----------------------Discovery Server (Eureka)------------------------
  discovery:
    container_name: discovery-service
    image: jobspotter/discovery:latest
    ports:
      - "8761:8761"
    networks:
      - jobspotterserver_jobSpotter-net

  #----------------------Gateway------------------------
  gateway:
    container_name: gateway
    image: jobspotter/gateway:latest
    ports:
      - "8100:8100"
    environment:
      - KEYCLOAK_ADMIN_CLIENT_ID=${KEYCLOAK_ADMIN_CLIENT_ID}
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - KEYSTORE_LOCATION=${KEYSTORE_LOCATION}
      - CERTIFICATE_LOCATION=${CERTIFICATE_LOCATION}
      - SSL_ON=true
    volumes:
      - ./certs:/ssl
    networks:
      - jobspotterserver_jobSpotter-net

  #----------------------Job Post Service------------------------
  job-post:
    container_name: job-post
    image: jobspotter/job-post:latest
    ports:
      - "8081:8081"
    networks:
      - jobspotterserver_jobSpotter-net

    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379


  #----------------------Notification Service------------------------
  notification:
    container_name: notification
    image: jobspotter/notification:latest
    ports:
      - "8083:8083"
    networks:
      - jobspotterserver_jobSpotter-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  #----------------------Report Service------------------------
  report:
    container_name: report
    image:  jobspotter/report:latest
    ports:
      - "8084:8084"
    networks:
      - jobspotterserver_jobSpotter-net
    environment:
      - KEYCLOAK_HOST_URL=${KEYCLOAK_HOST_URL}

  #----------------------Review Service------------------------
  review:
    container_name: review
    image:  jobspotter/review:latest
    ports:
      - "8082:8082"
    networks:
      - jobspotterserver_jobSpotter-net

  #----------------------User Service------------------------
  user:
    container_name: user
    image:  jobspotter/user:latest
    ports:
      - "8080:8080"
    networks:
      - jobspotterserver_jobSpotter-net
    environment:
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
      - AWS_S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET_ACCESS_KEY}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - KEYCLOAK_ADMIN_CLIENT_ID=${KEYCLOAK_ADMIN_CLIENT_ID}
      - KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - GOOGLE_GEOCODING_API_KEY=${GOOGLE_GEOCODING_API_KEY}
      - KEYCLOAK_HOST_URL=${KEYCLOAK_HOST_URL}



#        ----------------------Network------------------------

networks:
  jobspotterserver_jobSpotter-net:
    driver: bridge
    external: true

volumes:
  postgres:
  mongodb:
  keycloak:
  keycloak_db:
  redis: {}
  zookeeper-data: {}
  zookeeper-datalog: {}
  kafka-data: {}
  grafana: {}
